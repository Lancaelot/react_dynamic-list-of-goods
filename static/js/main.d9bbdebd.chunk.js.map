{"version":3,"sources":["components/GoodsList.jsx","components/helpers.js","App.js","index.js"],"names":["GoodsList","goods","className","map","good","style","color","name","getInfo","url","fetch","then","response","ok","json","Promise","reject","status","statusText","propTypes","PropTypes","string","isRequired","App","state","goodsToRender","goodsFromServer","loadAllGoods","setState","sortByNameGoods","sortedGoods","sort","currGood","nextGood","localeCompare","length","filterByColorGoods","filteredGoods","filter","this","onClick","type","PureComponent","ReactDOM","render","document","getElementById"],"mappings":"gTA2BeA,EAxBG,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OAChB,wBAAIC,UAAU,mCACXD,EAAME,KAAI,SAAAC,GAAI,OACb,yBAAKF,UAAU,QACb,yBAAKA,UAAU,WACb,wBACEA,UAAU,SACVG,MAAO,CAAEC,MAAM,GAAD,OAAKF,EAAKE,SAEvBF,EAAKG,a,OCVZC,EAAU,SAAAC,GAAG,OAAIC,MAAM,GAAD,OAAID,IAC7BE,MAAK,SAACC,GACL,OAAKA,EAASC,GAKPD,EAASE,OAHPC,QAAQC,OAAR,UAAkBJ,EAASK,OAA3B,cAAuCL,EAASM,iBAM7DV,EAAQW,UAAY,CAClBV,I,OAAKW,EAAUC,OAAOC,YAGTd,QCqEAe,G,kNA7EbC,MAAQ,CACNC,cAAe,GACfC,gBAAiB,I,EASnBC,aAAe,WACb,IAAM1B,EAAK,YAAO,EAAKuB,MAAME,iBAE7B,EAAKE,UAAS,SAAAJ,GAAK,MAAK,CACtBC,cAAexB,O,EAInB4B,gBAAkB,WAChB,IAAMC,EAAc,YAAI,EAAKN,MAAME,iBAChCK,MAAK,SAACC,EAAUC,GAAX,OAAwBD,EAASzB,KAAK2B,cAAcD,EAAS1B,SAErEuB,EAAYK,OAAS,EACrB,EAAKP,UAAS,SAAAJ,GAAK,MAAK,CACtBC,cAAeK,O,EAInBM,mBAAqB,WACnB,IAAMC,EAAgB,YAAI,EAAKb,MAAME,iBAClCY,QAAO,SAAAlC,GAAI,MAAmB,QAAfA,EAAKE,SAEvB,EAAKsB,UAAS,SAAAJ,GAAK,MAAK,CACtBC,cAAeY,O,kMA5Ba7B,EATjB,yE,OASPkB,E,OAENa,KAAKX,SAAS,CAAEF,oB,qIA+BhB,OACE,yBAAKxB,UAAU,OACb,qDACA,yBAAKA,UAAU,cACb,4BACEA,UAAU,YACVsC,QAASD,KAAKZ,aACdc,KAAK,UAHP,kBAOA,4BACEvC,UAAU,YACVsC,QAASD,KAAKV,gBACdY,KAAK,UAHP,sBAOA,4BACEvC,UAAU,YACVsC,QAASD,KAAKH,mBACdK,KAAK,UAHP,mBAQDF,KAAKf,MAAMC,eAEV,kBAAC,EAAD,CACExB,MAAOsC,KAAKf,MAAMC,qB,GArEZiB,kBCHlBC,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,W","file":"static/js/main.d9bbdebd.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst GoodsList = ({ goods }) => (\n  <ul className=\"ui middle aligned animated list\">\n    {goods.map(good => (\n      <div className=\"item\">\n        <div className=\"content\">\n          <li\n            className=\"header\"\n            style={{ color: `${good.color}` }}\n          >\n            {good.name}\n          </li>\n        </div>\n      </div>\n    ))}\n  </ul>\n);\n\nGoodsList.propTypes = {\n  goods: PropTypes.arrayOf(PropTypes.shape({\n    color: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n  })).isRequired,\n};\n\nexport default GoodsList;\n","import PropTypes from 'prop-types';\n\nconst getInfo = url => fetch(`${url}`)\n  .then((response) => {\n    if (!response.ok) {\n      // eslint-disable-next-line prefer-promise-reject-errors\n      return Promise.reject(`${response.status} - ${response.statusText}`);\n    }\n\n    return response.json();\n  });\n\ngetInfo.propTypes = {\n  url: PropTypes.string.isRequired,\n};\n\nexport default getInfo;\n","import React, { PureComponent } from 'react';\nimport GoodsList from './components/GoodsList';\nimport getInfo from './components/helpers';\nimport './App.scss';\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-goods/goods.json';\n\nclass App extends PureComponent {\n  state = {\n    goodsToRender: [],\n    goodsFromServer: [],\n  }\n\n  async componentDidMount() {\n    const goodsFromServer = await getInfo(BASE_URL);\n\n    this.setState({ goodsFromServer });\n  }\n\n  loadAllGoods = () => {\n    const goods = [...this.state.goodsFromServer];\n\n    this.setState(state => ({\n      goodsToRender: goods,\n    }));\n  }\n\n  sortByNameGoods = () => {\n    const sortedGoods = [...this.state.goodsFromServer]\n      .sort((currGood, nextGood) => currGood.name.localeCompare(nextGood.name));\n\n    sortedGoods.length = 5;\n    this.setState(state => ({\n      goodsToRender: sortedGoods,\n    }));\n  }\n\n  filterByColorGoods = () => {\n    const filteredGoods = [...this.state.goodsFromServer]\n      .filter(good => good.color === 'red');\n\n    this.setState(state => ({\n      goodsToRender: filteredGoods,\n    }));\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>Dynamic list of Goods</h1>\n        <div className=\"ui buttons\">\n          <button\n            className=\"ui button\"\n            onClick={this.loadAllGoods}\n            type=\"button\"\n          >\n            Load All goods\n          </button>\n          <button\n            className=\"ui button\"\n            onClick={this.sortByNameGoods}\n            type=\"button\"\n          >\n            Load 5 first goods\n          </button>\n          <button\n            className=\"ui button\"\n            onClick={this.filterByColorGoods}\n            type=\"button\"\n          >\n            Load red goods\n          </button>\n        </div>\n        {this.state.goodsToRender\n        && (\n          <GoodsList\n            goods={this.state.goodsToRender}\n          />\n        )\n        }\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}